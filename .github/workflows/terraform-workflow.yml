name: Terraform best practices

on:
  workflow_call:
    inputs:
      path:
        required: false
        default: .
        type: string
      infisical_token:
        required: true
        type: string
      terraform_version:
        required: false
        default: '1.5.4'
        type: string
      tflint_version:
        required: false
        default: 'v0.44.1'
        type: string

    secrets:
      insifical_token:
        required: true

jobs:

  # terrascan:
  #   name: terrascan-action
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ${{ inputs.path }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Run Terrascan
  #       id: terrascan
  #       uses: tenable/terrascan-action@main
  #       with:
  #         iac_type: 'terraform'
  #         iac_version: ${{ inputs.iac_version }}
  #         policy_type: ${{ inputs.policy_type }}
  #         verbose: ${{ inputs.verbose }}
  #         iac_dir: ${{ inputs.path }}
  #         policy_path: ${{ inputs.policy_path }}
  #         skip_rules: ${{ inputs.skip_rules }}

  checkov:
    runs-on: ubuntu-latest
    env:
      INFISICAL_TOKEN: ${{ secrets.infisical_token }}
    defaults:
      run:
        working-directory: ${{ inputs.path }}

    steps:
      - uses: actions/checkout@v4
        name: Checkout source code

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Install Infisical
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
          sudo apt-get update && sudo apt-get install -y infisical

      - name: Terraform Init
        run: infisical run --env prod --command 'terraform init -backend-config="bucket=${GCS_BUCKET}"'

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ inputs.path }}
          framework: terraform
          output_format: cli
          output_file_path: console
          skip_check: CKV_TF_1

  tfsec:
    runs-on: ubuntu-latest
    env:
      INFISICAL_TOKEN: ${{ secrets.infisical_token }}
    defaults:
      run:
        working-directory: ${{ inputs.path }}

    steps:

      - uses: actions/checkout@v4
        name: Checkout source code

      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ${{ inputs.path }}

  tflint:
    runs-on: ubuntu-latest
    env:
      INFISICAL_TOKEN: ${{ secrets.infisical_token }}
    defaults:
      run:
        working-directory: ${{ inputs.path }}

    steps:
      - uses: actions/checkout@v4
        name: Checkout source code

      - uses: actions/cache@v4
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Install Infisical
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
          sudo apt-get update && sudo apt-get install -y infisical

      - name: Terraform Init
        run: infisical run --env prod --command 'terraform init -backend-config="bucket=${GCS_BUCKET}"'

      - uses: terraform-linters/setup-tflint@v4
        name: Setup TFLint
        with:
          tflint_version: ${{ inputs.tflint_version }}

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: infisical run --env prod -- tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      # Skip upload scanning

      - name: Run TFLint
        # if: inputs.tflint_upload_sarif == 'false'
        run: infisical run --env prod -- tflint -f compact

      # Upload scanning

      # - name: Run TFLint
      #   # if: inputs.tflint_upload_sarif == 'true'
      #   if: $SARIF_UPLOAD == true
      #   continue-on-error: true
      #   id: tflint_run
      #   run: tflint -f sarif > results.sarif

      # - name: Upload SARIF file
      #   # if: inputs.tflint_upload_sarif == 'true'
      #   if: $SARIF_UPLOAD == false
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     # Path to SARIF file relative to the root of the repository
      #     sarif_file: results.sarif
      #     # Optional category for the results
      #     # Used to differentiate multiple results for one commit
      #     category: tflint

      # - name: Force status before upload
      #   # if: |
      #   #   steps.tflint_run.outcome != 'success' &&
      #   #   inputs.tflint_upload_sarif == 'true'
      #   if: steps.tflint_run.outcome != 'success' && $SARIF_UPLOAD == 'true'
      #   run: exit 1

  terraform-native-checks:
    needs:
      - checkov
      - tfsec
      - tflint
    runs-on: ubuntu-latest
    env:
      INFISICAL_TOKEN: ${{ secrets.infisical_token }}
    defaults:
      run:
        working-directory: ${{ inputs.path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Install Infisical
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
          sudo apt-get update && sudo apt-get install -y infisical

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: infisical run --env prod --command 'terraform init -backend-config="bucket=${GCS_BUCKET}"'

      - name: Terraform Validate
        run: infisical run --env prod -- terraform validate -no-color

  terraform-apply:
    needs:
      - terraform-native-checks
    runs-on: ubuntu-latest
    env:
      INFISICAL_TOKEN: ${{ secrets.infisical_token }}
    defaults:
      run:
        working-directory: ${{ inputs.path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Install Infisical
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
          sudo apt-get update && sudo apt-get install -y infisical

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: infisical run --env prod --command 'terraform init -backend-config="bucket=${GCS_BUCKET}"'

      - name: Terraform Validate
        run: infisical run --env prod -- terraform validate -no-color

      - name: Terraform plan
        run: infisical run --env prod -- terraform plan

      - name: Terraform apply
        run: infisical run --env prod -- terraform apply -auto-approve
