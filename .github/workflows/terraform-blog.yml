name: terraform blog

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/terraform-blog.yml'
      - 'terraform/blog/**'

  workflow_dispatch:

jobs:

  # terrascan:
  #   name: terrascan-action
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: terraform/blog
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Run Terrascan
  #       id: terrascan
  #       uses: tenable/terrascan-action@main
  #       with:
  #         iac_type: 'terraform'
  #         iac_version: ${{ inputs.iac_version }}
  #         policy_type: ${{ inputs.policy_type }}
  #         verbose: ${{ inputs.verbose }}
  #         iac_dir: terraform/blog
  #         policy_path: ${{ inputs.policy_path }}
  #         skip_rules: ${{ inputs.skip_rules }}

  checkov:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.STATE_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.STATE_AWS_SECRET_ACCESS_KEY }}
      AWS_ENDPOINT_URL_S3: ${{ secrets.STATE_AWS_ENDPOINT_URL_S3 }}
      AWS_S3_BUCKET: ${{ secrets.STATE_AWS_S3_BUCKET }}
      AWS_DEFAULT_REGION: ${{ secrets.STATE_AWS_DEFAULT_REGION }}
    defaults:
      run:
        working-directory: terraform/blog

    steps:
      - uses: actions/checkout@v3
        name: Checkout source code

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.4'
          # cli_config_credentials_token: ${{ secrets.tf_api_token }}

      - name: Terraform Init
        run: terraform init

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: terraform/blog
          framework: terraform 
          output_format: cli
          output_file_path: console
          skip_check: CKV_TF_1

  tfsec:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.STATE_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.STATE_AWS_SECRET_ACCESS_KEY }}
      AWS_ENDPOINT_URL_S3: ${{ secrets.STATE_AWS_ENDPOINT_URL_S3 }}
      AWS_S3_BUCKET: ${{ secrets.STATE_AWS_S3_BUCKET }}
      AWS_DEFAULT_REGION: ${{ secrets.STATE_AWS_DEFAULT_REGION }}
    defaults:
      run:
        working-directory: terraform/blog

    steps:

      - uses: actions/checkout@v3
        name: Checkout source code

      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: terraform/blog

  tflint:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.STATE_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.STATE_AWS_SECRET_ACCESS_KEY }}
      AWS_ENDPOINT_URL_S3: ${{ secrets.STATE_AWS_ENDPOINT_URL_S3 }}
      AWS_S3_BUCKET: ${{ secrets.STATE_AWS_S3_BUCKET }}
      AWS_DEFAULT_REGION: ${{ secrets.STATE_AWS_DEFAULT_REGION }}
    defaults:
      run:
        working-directory: terraform/blog

    steps:
      - uses: actions/checkout@v3
        name: Checkout source code

      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.4'
          # cli_config_credentials_token: ${{ secrets.tf_api_token }}

      - name: Terraform Init
        run: terraform init

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: ${{ inputs.tflint_version }}

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      # Skip upload scanning

      - name: Run TFLint
        # if: inputs.tflint_upload_sarif == 'false'
        run: tflint -f compact

      # Upload scanning

      - name: Run TFLint
        # if: inputs.tflint_upload_sarif == 'true'
        continue-on-error: true
        id: tflint_run
        run: tflint -f sarif > results.sarif

      - name: Upload SARIF file
        # if: inputs.tflint_upload_sarif == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: tflint

      - name: Force status before upload
        # if: |
        #   steps.tflint_run.outcome != 'success' &&
        #   inputs.tflint_upload_sarif == 'true'
        if: steps.tflint_run.outcome != 'success'
        run: exit 1

  terraform-native-checks:
    needs:
      - checkov
      - tfsec
      - tflint
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.STATE_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.STATE_AWS_SECRET_ACCESS_KEY }}
      AWS_ENDPOINT_URL_S3: ${{ secrets.STATE_AWS_ENDPOINT_URL_S3 }}
      AWS_S3_BUCKET: ${{ secrets.STATE_AWS_S3_BUCKET }}
      AWS_DEFAULT_REGION: ${{ secrets.STATE_AWS_DEFAULT_REGION }}
    defaults:
      run:
        working-directory: terraform/blog

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.4'
          # cli_config_credentials_token: ${{ secrets.tf_api_token }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color
